version: '3.8'

services:
  # Money Manager Application - Production Configuration
  money-manager:
    build: 
      context: .
      dockerfile: Dockerfile
    image: money-manager:latest
    container_name: money-manager-app
    restart: unless-stopped
    environment:
      # Salt Edge Configuration
      - SALTEDGE_BASE_URL=${SALTEDGE_BASE_URL:-https://www.saltedge.com/api/v6}
      - SALTEDGE_APP_ID=${SALTEDGE_APP_ID}
      - SALTEDGE_SECRET_KEY=${SALTEDGE_SECRET_KEY}
      - SALTEDGE_CLIENT_ID=${SALTEDGE_CLIENT_ID}
      
      # Database Configuration
      - DATABASE_URL=sqlite:///./data/money_manager.db
      
      # Google API Configuration
      - GOOGLE_CREDENTIALS_FILE=/app/credentials/credentials.json
      - GOOGLE_TOKEN_FILE=/app/credentials/token.json
      
      # Application Configuration
      - DEBUG=False
      - API_HOST=0.0.0.0
      - API_PORT=8000
    volumes:
      # Persistent database storage
      - money-manager-data:/app/data
      # Google API credentials
      - ./credentials:/app/credentials:ro
      # Logs
      - money-manager-logs:/app/logs
    networks:
      - money-manager-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:1.25-alpine
    container_name: money-manager-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      # SSL certificates
      - ./ssl:/etc/nginx/ssl:ro
      # Let's Encrypt webroot
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      money-manager:
        condition: service_healthy
    networks:
      - money-manager-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Certbot for Let's Encrypt SSL certificates
  certbot:
    image: certbot/certbot:latest
    container_name: money-manager-certbot
    volumes:
      - ./ssl:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${SSL_EMAIL} --agree-tos --no-eff-email -d ${DOMAIN}
    profiles:
      - ssl-setup

  # Optional: Database backup service
  backup:
    image: alpine:latest
    container_name: money-manager-backup
    restart: unless-stopped
    volumes:
      - money-manager-data:/data:ro
      - ./backups:/backups
    environment:
      - BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-0 2 * * *}  # Daily at 2 AM
    command: >
      sh -c "
        apk add --no-cache dcron &&
        echo '${BACKUP_SCHEDULE:-0 2 * * *} cp /data/money_manager.db /backups/money_manager_$$(date +\"%Y%m%d_%H%M%S\").db && find /backups -name \"money_manager_*.db\" -mtime +30 -delete' | crontab - &&
        crond -f
      "
    profiles:
      - backup

  # Monitoring with simple health checker
  healthchecker:
    image: alpine:latest
    container_name: money-manager-health
    restart: unless-stopped
    volumes:
      - ./monitoring:/monitoring
    environment:
      - CHECK_URL=https://${DOMAIN}/health
      - CHECK_INTERVAL=${HEALTH_CHECK_INTERVAL:-300}  # 5 minutes
    command: >
      sh -c "
        apk add --no-cache curl &&
        while true; do
          if curl -f $CHECK_URL > /dev/null 2>&1; then
            echo \"$(date): Health check PASSED\"
            echo \"$(date): PASS\" >> /monitoring/health.log
          else
            echo \"$(date): Health check FAILED\"
            echo \"$(date): FAIL\" >> /monitoring/health.log
          fi
          sleep $CHECK_INTERVAL
        done
      "
    profiles:
      - monitoring

networks:
  money-manager-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  money-manager-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data
  money-manager-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/logs
